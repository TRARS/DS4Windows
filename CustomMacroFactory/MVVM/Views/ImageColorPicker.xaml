<UserControl x:Class="CustomMacroFactory.MVVM.Views.ImageColorPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:CustomMacroFactory.MVVM.ViewModels"
             xmlns:v="clr-namespace:CustomMacroFactory.MVVM.Views" 
             xmlns:buttonex="clr-namespace:TrarsUI.Shared.Controls.ButtonEx;assembly=TrarsUI.Shared" 
             xmlns:aimcursor="clr-namespace:CustomMacroBase.CustomControlEx.VerticalButtonEx;assembly=CustomMacroBase" xmlns:alertpanelex="clr-namespace:TrarsUI.Shared.Controls.AlertPanelEx;assembly=TrarsUI.Shared"
             mc:Ignorable="d"
             ClipToBounds="True"
             Focusable="True"

             d:Width="540" 
             d:Height="272" 
             d:Visibility="Visible"
             d:DataContext="{d:DesignInstance vm:ImageColorPickerVM, IsDesignTimeCreatable=True}"
             >
    <UserControl.Resources>
        <SolidColorBrush Color="#862E2F34" x:Key="AreaColor"/>
    </UserControl.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseRightButtonUp">
            <i:InvokeCommandAction Command="{Binding PreviewMouseRightButtonUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding PreviewMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding PreviewMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown">
            <i:InvokeCommandAction Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--ScreenshotArea-->
        <Border BorderThickness="1">
            <Border.BorderBrush>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Rectangle StrokeDashArray="6 3"
                          Stroke="Gray"
                          StrokeThickness="1"
                          RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.TopRight}"
                          RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.BottomLeft}"
                          Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                          Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.BorderBrush>
            
            <Grid x:Name="ScreenshotArea" ClipToBounds="True">
                <!--Background-->
                <Rectangle>
                    <Rectangle.Fill>
                        <VisualBrush TileMode="Tile" 
                                     Viewport="0,0,40,40" ViewportUnits="Absolute" 
                                     Viewbox="0,0,20,20" ViewboxUnits="Absolute">
                            <VisualBrush.Visual>
                                <Grid Background="Gray" RenderTransformOrigin="0.5,0.5">
                                    <Grid Opacity="0.25">
                                        <Path Data="M 0,5 L 10,5" Stroke="White" StrokeThickness="10"/>
                                        <Path Data="M 10,15 L 20,15" Stroke="White" StrokeThickness="10"/>
                                    </Grid>
                                </Grid>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.Fill>
                </Rectangle>

                <!--Screenshot-->
                <ContentControl Content="{Binding CurrentScreenshot}"/>

                <!--Info + Magnifier-->
                <Grid VerticalAlignment="Bottom" d:Background="#80FF0041" d:MinHeight="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <ContentControl Grid.Column="0" Content="{Binding AdditionalInfo}"/>
                    <ContentControl Grid.Column="1" Content="{Binding Magnifier}"/>
                </Grid>

                <!--?-->
                <alertpanelex:cAlertPanel SystemMessages="{Binding SystemMessages}" IsHitTestVisible="False"/>
            </Grid>
        </Border>

        <!--???-->
        <Border Grid.Row="1" Grid.RowSpan="2" Background="{StaticResource AreaColor}" CornerRadius="0,0,4,4"/>

        <!--???-->
        <Grid Grid.Row="1" Margin="2">
            <StackPanel Orientation="Horizontal">
                <buttonex:cButtonAtype Content="Get Snapshot" MinWidth="60" HorizontalAlignment="Left" Margin="0,0,5,0"
                                       Command="{Binding GetSnapshotCommand}"/>
                <buttonex:cButtonAtype Content="Resize(1080P)" MinWidth="60" HorizontalAlignment="Left" Margin="0,0,5,0"
                                       Command="{Binding ResizeTargetWindow1080PCommand}"/>
                <buttonex:cButtonAtype Content="Resize(720P)" MinWidth="60" HorizontalAlignment="Left" Margin="0,0,5,0"
                                       Command="{Binding ResizeTargetWindow720PCommand}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <buttonex:cButtonAtype Content="Pause / Resume" MinWidth="60" HorizontalAlignment="Left" Margin="0,0,5,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding PauseRefreshCommand}"
                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </buttonex:cButtonAtype>
                <buttonex:cButtonAtype Content="Save To Desktop" MinWidth="60" HorizontalAlignment="Left"
                                   Command="{Binding SaveToDesktopCommand}"/>
            </StackPanel>
        </Grid>
        
        <!--???-->
        <Grid Grid.Row="2" Margin="2,0,2,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>
            
            <Border HorizontalAlignment="Left">
                <aimcursor:cAimCursorButton HorizontalAlignment="Left" VerticalAlignment="Center" 
                                            IconOnly="True"
                                            Icon="{Binding DataContext.AimIcon, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Mode=OneWay}"/>
            </Border>

            <!--ClickHex-->
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" 
                        Width="25" Height="25" BorderThickness="2" CornerRadius="5" HorizontalAlignment="Center"
                        Background="{Binding ClickHex.Hex}"
                        Margin="0,0,5,0">
                    <Border.BorderBrush>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Rectangle StrokeDashArray="2 1"
                                           Stroke="White"
                                           StrokeThickness="2"
                                           RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.TopRight}"
                                           RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.BottomLeft}"
                                           Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                           Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Border.BorderBrush>
                </Border>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding ClickHex.Hex}" Foreground="White" VerticalAlignment="Bottom"
                               Margin="0,0,0,-2"/>
                    <TextBlock Grid.Row="1" Text="{Binding ClickHex.Pos}" Foreground="White" VerticalAlignment="Top"
                               Margin="0,-2,0,0"/>
                </Grid>
            </Grid>

            <!--MoveHex-->
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" 
                        Width="25" Height="25" BorderThickness="2" CornerRadius="5" HorizontalAlignment="Center"
                        Background="{Binding MoveHex.Hex}"
                        Margin="0,0,5,0">
                    <Border.BorderBrush>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Rectangle StrokeDashArray="2 1"
                                           Stroke="White"
                                           StrokeThickness="2"
                                           RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.TopRight}"
                                           RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.BottomLeft}"
                                           Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                           Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Border.BorderBrush>
                </Border>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding MoveHex.Hex}" Foreground="White" VerticalAlignment="Bottom"
                               Margin="0,0,0,-2"/>
                    <TextBlock Grid.Row="1" Text="{Binding MoveHex.Pos}" Foreground="White" VerticalAlignment="Top"
                               Margin="0,-2,0,0"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
