<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:CustomMacroBase.CustomControlEx.VerticalButtonEx" 
                    xmlns:contextmenuex="clr-namespace:CustomMacroBase.CustomControlEx.ContextMenuEx">

    <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter"/>
    <local:cVerticalButtonBase_converter_content2visibility x:Key="cVerticalButtonBase_converter_content2visibility"/>
    
    <Style TargetType="{x:Type local:cVerticalButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cVerticalButtonBase}">
                    <Grid x:Name="border" Background="Transparent" SnapsToDevicePixels="true" MinHeight="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="7"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="25"/>
                        </Grid.RowDefinitions>
                        <Grid.ContextMenu>
                            <contextmenuex:cContextMenu Visibility="{Binding DataContext.RightClickContent, 
                                                                             RelativeSource={RelativeSource Self},
                                                                             Mode=OneWay,
                                                                             Converter={StaticResource cVerticalButtonBase_converter_content2visibility}}">
                                <ContextMenu.Resources>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="StaysOpenOnClick" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                                    <Border x:Name="Border" BorderThickness="2" CornerRadius="4">
                                                        <Grid>
                                                            <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ContextMenu.Resources>
                                
                                <Border MinWidth="180"
                                        MinHeight="60"
                                        BorderBrush="Crimson" 
                                        BorderThickness="1"
                                        Background="Black"
                                        CornerRadius="2.5"
                                        Padding="5">
                                    <ItemsControl ItemsSource="{Binding DataContext.RightClickContent, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                        <ItemsControl.Template>
                                            <ControlTemplate TargetType="ItemsControl">
                                                <Border>
                                                    <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                    </ItemsControl>
                                </Border>
                            </contextmenuex:cContextMenu>
                        </Grid.ContextMenu>

                        <!--主要部分，应与图标部分互斥-->
                        <Border x:Name="verticalButtonBorder"
                                Grid.Column="0" Grid.ColumnSpan="2"
                                Background="DarkGray" Opacity="0.5" Visibility="Hidden"/>
                        <Grid Margin="5,0,5,0" x:Name="verticalButtonContent"
                              Grid.Column="0" Grid.ColumnSpan="2">
                            <TextBlock x:Name="verticalButtonText" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding DataContext.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                       />
                            <Rectangle x:Name="verticalButtonUnderLine" Height="2" Fill="DarkGray" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="Hidden" Margin="0,0,0,3"
                                       />
                            <Rectangle x:Name="verticalButtonUnderLine_cover" Height="2" Fill="OrangeRed" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="Visible" Margin="0,0,0,3"
                                       >
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" Opacity="1">
                                        <GradientStop Offset="0" Color="Transparent"/>

                                        <GradientStop Offset="0.5" Color="Transparent"/>
                                        <GradientStop Offset="0.5" Color="White"/>

                                        <GradientStop Offset="0.5" Color="White"/>
                                        <GradientStop Offset="0.5" Color="Transparent"/>

                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>

                        <!--图标部分，应与主要部分互斥-->
                        <Border Grid.Column="0" Grid.ColumnSpan="2">
                            <ItemsControl x:Name="part_icon" Visibility="Collapsed"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          ItemsSource="{Binding DataContext.Icon, RelativeSource={RelativeSource Self}}">
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                            </ItemsControl>
                        </Border>
                        
                        <!--角标-->
                        <Border Grid.Column="0">
                            <TextBlock x:Name="part_badge" 
                                       Foreground="Red" FontSize="10" FontWeight="Bold"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding DataContext.BadgeText, RelativeSource={RelativeSource Self}, Mode=OneWay}" 
                                       Visibility="{Binding DataContext.BadgeOnOff, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="verticalButtonBorder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="verticalButtonUnderLine" Value="Visible"/>
                            <Setter Property="Foreground" TargetName="verticalButtonText" Value="Aqua"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Visibility" TargetName="verticalButtonBorder" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="verticalButtonBorder" Value="0.2"/>
                            <Setter Property="Opacity" TargetName="verticalButtonText" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="part_icon" Value="0.5"/>
                        </Trigger>

                        <!--图标 显示/隐藏-->
                        <DataTrigger Binding="{Binding DataContext.IconOnly, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter TargetName="part_icon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="verticalButtonContent" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.IconOnly, RelativeSource={RelativeSource Self}}" Value="false">
                            <Setter TargetName="part_icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="verticalButtonContent" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <!--横线动画-->
                        <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard FillBehavior="Stop">
                                    <!--透明度动画-->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(Opacity)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <!--线扩张动画-->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[4].(GradientStop.Offset)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <!--透明度动画-->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(Opacity)" Storyboard.TargetName="verticalButtonUnderLine_cover">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.65" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>