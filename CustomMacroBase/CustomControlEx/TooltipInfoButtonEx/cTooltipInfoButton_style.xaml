<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:CustomMacroBase.CustomControlEx.TooltipInfoButtonEx" 
                    xmlns:behavior="clr-namespace:CustomMacroBase.Helper.Behavior"
                    xmlns:contextmenuex="clr-namespace:CustomMacroBase.CustomControlEx.ContextMenuEx" 
                    xmlns:gridex="clr-namespace:CustomMacroBase.CustomControlEx.GridEx" 
                    >

    <local:cTooltipInfoButton_converter_test x:Key="cTooltipInfoButton_converter_test"/>

    <Style TargetType="{x:Type local:cTooltipInfoButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cTooltipInfoButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding BorderCornerRadius}">

                        <gridex:cGrid x:Name="contentBorder"
                                      ParentModel="{TemplateBinding ToolTipContent}"
                                      Background="Transparent">
                            <i:Interaction.Behaviors>
                                <behavior:GetMouseLeftButtonDownPlacementTargetBehavior Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                            </i:Interaction.Behaviors>
                            
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              IsHitTestVisible="False"/>

                            <Grid.ContextMenu>
                                <contextmenuex:cContextMenu Opacity="1"
                                                            IsOpen="{Binding ContextMenuIsOpen, RelativeSource={RelativeSource TemplatedParent}}">

                                    <contextmenuex:cMenuItemForInfoButton Focusable="True">
                                        <contextmenuex:cMenuItemForInfoButton.Header>
                                            <Border MinWidth="100" MinHeight="100">
                                                <ContentControl Content="{Binding PlacementTarget.ParentModel, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                            </Border>
                                        </contextmenuex:cMenuItemForInfoButton.Header>
                                    </contextmenuex:cMenuItemForInfoButton>
                                    
                                </contextmenuex:cContextMenu>
                            </Grid.ContextMenu>

                        </gridex:cGrid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="mouseover_anm">
                                    <Storyboard FillBehavior="Stop" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentBorder">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="mouseover_anm"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>