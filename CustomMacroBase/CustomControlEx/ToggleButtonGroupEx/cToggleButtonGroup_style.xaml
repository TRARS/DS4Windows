<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomMacroBase.CustomControlEx.ToggleButtonGroupEx" 
                    xmlns:togglebuttonex="clr-namespace:CustomMacroBase.CustomControlEx.ToggleButtonEx" 
                    xmlns:contextmenuex="clr-namespace:CustomMacroBase.CustomControlEx.ContextMenuEx"
                    xmlns:foldablecontainerex="clr-namespace:CustomMacroBase.CustomControlEx.FoldableContainerEx">

    <local:cToggleButtonGroup_converter_bool2visibility x:Key="cToggleButtonGroup_converter_bool2visibility"/>
    <local:cToggleButtonGroup_converter_bool2opacity x:Key="cToggleButtonGroup_converter_bool2opacity"/>
    <local:cToggleButtonGroup_converter_boolbool2bool x:Key="cToggleButtonGroup_converter_boolbool2bool"/>
    <local:cToggleButtonGroup_converter_delegate2uielement x:Key="cToggleButtonGroup_converter_delegate2uielement"/>
    <local:cToggleButtonGroup_converter_string2bool x:Key="cToggleButtonGroup_converter_string2bool"/>
    <local:cToggleButtonGroup_converter_count2expander x:Key="cToggleButtonGroup_converter_count2expander"/>
    <local:cToggleButtonGroup_converter_count2arrowvisibility x:Key="cToggleButtonGroup_converter_count2arrowvisibility"/>
    <local:cToggleButtonGroup_converter_tooltip x:Key="cToggleButtonGroup_converter_tooltip"/>
    
    <!--Host-->
    <Style TargetType="{x:Type local:cToggleButtonGroup}">
        <Style.Resources>
            <!--Placement-->
            <Thickness x:Key="ChildrenPlacement">0,0,0,0</Thickness>
            <Thickness x:Key="ChildrenExPlacement">16,0,0,0</Thickness>

            <!--UnknownStyle-->
            <DataTemplate x:Key="UnknownStyle">
                <Border Margin="{StaticResource ChildrenExPlacement}">
                    <TextBlock Text="{Binding Type, StringFormat=UnknownType &lt;{0}&gt;}" Foreground="Red"/>
                </Border>
            </DataTemplate>
            
            <!--UIElementStyle-->
            <DataTemplate x:Key="UIElementStyle">
                <local:cChildrenExContainer Grid.Row="2" x:Name="childrenex"
                                            ItemsSource="{Binding Content, Converter={StaticResource cToggleButtonGroup_converter_delegate2uielement}}"
                                            Margin="{StaticResource ChildrenExPlacement}"
                                            Opacity="{Binding EnableChildren, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Converter={StaticResource cToggleButtonGroup_converter_bool2opacity}, ConverterParameter=0.25, Mode=OneWay}"
                                            IsHitTestVisible="{Binding EnableChildren, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" IsVirtualizing="True"/>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </local:cChildrenExContainer>
            </DataTemplate>
            
            <!--GateNodeStyle-->
            <DataTemplate x:Key="GateNodeStyle">
                <Grid>
                    <foldablecontainerex:cFoldableContainer>
                        <foldablecontainerex:cFoldableContainer.ArrowVisibility>
                            <MultiBinding Converter="{StaticResource cToggleButtonGroup_converter_count2arrowvisibility}" Mode="OneWay">
                                <Binding Path="Content.Children"/>
                                <Binding Path="ActualHeight" ElementName="children"/>
                            </MultiBinding>
                        </foldablecontainerex:cFoldableContainer.ArrowVisibility>
                        <foldablecontainerex:cFoldableContainer.Header>
                            <!--Parent-->
                            <togglebuttonex:cToggleButton x:Name="parent"
                                                          DataContext="{Binding Content}"
                                                          Text="{Binding Text, Mode=OneWay}"
                                                          IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                          Visibility="{Binding HideSelf, Mode=OneWay, Converter={StaticResource cToggleButtonGroup_converter_bool2visibility}}"
                                                          DisableSliderButton="{Binding DisableSliderButton, Mode=OneWay}"
                                                          Enable="{Binding EnableChildren, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Mode=OneWay}"
                                                          ToolTipService.IsEnabled="{Binding TooltipPrefix, Mode=OneWay, Converter={StaticResource cToggleButtonGroup_converter_string2bool}}"
                                                          ToolTipService.Placement="Top"
                                                          ToolTipService.InitialShowDelay="256">
                                <togglebuttonex:cToggleButton.ToolTip>
                                    <MultiBinding Converter="{StaticResource cToggleButtonGroup_converter_tooltip}" Mode="OneWay">
                                        <Binding Path="TooltipPrefix"/>
                                        <Binding Path="TooltipSuffix"/>
                                    </MultiBinding>
                                </togglebuttonex:cToggleButton.ToolTip>
                            </togglebuttonex:cToggleButton>
                        </foldablecontainerex:cFoldableContainer.Header>

                        <Grid>
                            <!--Children-->
                            <local:cChildrenContainer x:Name="children"
                                                      DataContext="{Binding Content}"
                                                      ItemsSource="{Binding Children}"
                                                      Margin="{StaticResource ChildrenPlacement}">
                                <local:cChildrenContainer.EnableChildren>
                                    <MultiBinding Converter="{StaticResource cToggleButtonGroup_converter_boolbool2bool}">
                                        <Binding Path="IsChecked" ElementName="parent" Mode="OneWay"/>
                                        <Binding Path="EnableChildren" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}" Mode="OneWay"/>
                                    </MultiBinding>
                                </local:cChildrenContainer.EnableChildren>
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" IsVirtualizing="True"/>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemContainerStyle>
                                    <DynamicResource ResourceKey="GateNodeContainerStyle"/>
                                </ItemsControl.ItemContainerStyle>
                            </local:cChildrenContainer>
                        </Grid>
                    </foldablecontainerex:cFoldableContainer>
                </Grid>
            </DataTemplate>

            <!--GateNodeContainerStyle-->
            <Style x:Key="GateNodeContainerStyle" TargetType="{x:Type ContentPresenter}">
                <Setter Property="ContentTemplate" Value="{StaticResource UnknownStyle}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Type}" Value="GateBase">
                        <Setter Property="ContentTemplate" Value="{StaticResource GateNodeStyle}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Delegate">
                        <Setter Property="ContentTemplate" Value="{StaticResource UIElementStyle}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
        </Style.Resources>
        
        <!--RootStyle-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cToggleButtonGroup}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <foldablecontainerex:cFoldableContainer Grid.Row="1">
                                <foldablecontainerex:cFoldableContainer.ArrowVisibility>
                                    <MultiBinding Converter="{StaticResource cToggleButtonGroup_converter_count2arrowvisibility}" Mode="OneWay">
                                        <Binding Path="DataContext.Children" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ActualHeight" ElementName="children"/>
                                    </MultiBinding>
                                </foldablecontainerex:cFoldableContainer.ArrowVisibility>
                                <foldablecontainerex:cFoldableContainer.Header>
                                    <!--Parent(root)-->
                                    <togglebuttonex:cToggleButton Text="{Binding Text, Mode=OneWay}"
                                                                  IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                                  Visibility="{Binding HideSelf, Mode=OneWay, Converter={StaticResource cToggleButtonGroup_converter_bool2visibility}}"
                                                                  DisableSliderButton="{Binding DisableSliderButton, Mode=OneWay}"
                                                                  ToolTipService.IsEnabled="{Binding TooltipPrefix, Mode=OneWay, Converter={StaticResource cToggleButtonGroup_converter_string2bool}}"
                                                                  ToolTipService.Placement="Top"
                                                                  ToolTipService.InitialShowDelay="256">
                                        <togglebuttonex:cToggleButton.ToolTip>
                                            <MultiBinding Converter="{StaticResource cToggleButtonGroup_converter_tooltip}" Mode="OneWay">
                                                <Binding Path="TooltipPrefix"/>
                                                <Binding Path="TooltipSuffix"/>
                                            </MultiBinding>
                                        </togglebuttonex:cToggleButton.ToolTip>
                                        <togglebuttonex:cToggleButton.ContextMenu>
                                            <contextmenuex:cContextMenu StaysOpen="True" Focusable="True">
                                                <contextmenuex:cMenuItemForHotkey Source="{TemplateBinding DataContext}"/>
                                            </contextmenuex:cContextMenu>
                                        </togglebuttonex:cToggleButton.ContextMenu>
                                    </togglebuttonex:cToggleButton>
                                </foldablecontainerex:cFoldableContainer.Header>

                                <Grid>
                                    <!--Children-->
                                    <local:cChildrenContainer x:Name="children"
                                                              DataContext="{TemplateBinding DataContext}"
                                                              ItemsSource="{Binding Children}"
                                                              EnableChildren="{Binding IsChecked, Mode=OneWay}"
                                                              Margin="{StaticResource ChildrenPlacement}">
                                        <ItemsControl.Template>
                                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                                <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" IsVirtualizing="True"/>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemContainerStyle>
                                            <StaticResource ResourceKey="GateNodeContainerStyle"/>
                                        </ItemsControl.ItemContainerStyle>
                                    </local:cChildrenContainer>
                                </Grid>
                            </foldablecontainerex:cFoldableContainer>
                            
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>