<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomMacroBase.CustomControlEx.ComboBoxEx"
                    xmlns:scrollviewerex="clr-namespace:CustomMacroBase.CustomControlEx.ScrollViewerEx">

    <local:cComboBox_converter_content2string x:Key="cComboBox_converter_content2string"/>

    <SolidColorBrush x:Key="Body.BorderBrush" Color="#99FFFFFF"/>
    <SolidColorBrush x:Key="Body.BorderBrush.MouseOver" Color="LightGray"/>

    <SolidColorBrush x:Key="Body.Background" Color="#595C64"/>
    <SolidColorBrush x:Key="Body.Background.MouseOver" Color="#454851"/>

    <SolidColorBrush x:Key="Arrow.Fill" Color="LightGray"/>
    <SolidColorBrush x:Key="Arrow.Fill.MouseOver" Color="White"/>
    
    <SolidColorBrush x:Key="DropDownBorder.BorderBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="DropDownBorder.Background" Color="#454851"/>

    <SolidColorBrush x:Key="ContentSite.Foreground" Color="LightGray"/>
    <SolidColorBrush x:Key="ContentSite.Foreground.MouseOver" Color="White"/>
    
    <!--ComboBoxTextBox-->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <!-- This must be named as PART_ContentHost -->
        <Border Focusable="False" Background="{TemplateBinding Background}">
            <Grid>
                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              VerticalAlignment="Center" Margin="4,0,0,0" Opacity="0">
                </ScrollViewer>
            </Grid>
        </Border>
    </ControlTemplate>
    
    <!--ComboBox-->
    <Style TargetType="{x:Type local:cComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="Snow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid >
                        <Border x:Name="Body" Grid.Column="0" Grid.ColumnSpan="2" Opacity="1" CornerRadius="2"
                                Background="{StaticResource Body.Background}"
                                BorderBrush="{StaticResource Body.BorderBrush}"
                                BorderThickness="1"/>

                        <!-- The ToggleButton is databound to the ComboBox itself to toggle IsDropDownOpen -->
                        <ToggleButton  Opacity="0.01" Grid.Column="2" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <!--<ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>-->
                        <TextBlock x:Name="ContentSite" 
                                   HorizontalAlignment="Left" Margin="3,3,23,3" 
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding SelectionBoxItem, Converter={StaticResource cComboBox_converter_content2string}}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   IsHitTestVisible="False"/>
                        
                        <!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
                        <TextBox Visibility="Hidden" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Path x:Name="Arrow" 
                              Data="M52.335 261.072c-31.269 30.397-31.269 79.722 0 110.194l403.212 391.718c31.325 30.382 82.114 30.382 113.377 0l403.197-391.718c31.325-30.466 31.325-79.793 0-110.194-31.28-30.449-82.058-30.449-113.39 0l-346.497 336.64-346.457-336.64c-31.325-30.448-82.105-30.448-113.446 0l0 0z"
                              Margin="4" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Right"
                              Width="13" Height="8"
                              Fill="{TemplateBinding Foreground}" Opacity="0.65" IsHitTestVisible="False">
                        </Path>

                        <!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" 
                                        BorderBrush="{StaticResource DropDownBorder.BorderBrush}" 
                                        Background="{StaticResource DropDownBorder.Background}" 
                                        BorderThickness="1" 
                                        CornerRadius="2.5"
                                        Opacity="1"/>
                                <scrollviewerex:cScrollViewer Margin="3,5,3,5" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- The StackPanel is used to display the children by setting IsItemsHost to be True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </scrollviewerex:cScrollViewer>
                            
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- This forces the DropDown to have a minimum size if it is empty -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <!--<Setter Property="CornerRadius" Value="0" TargetName="DropDownBorder"/>-->
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Arrow" Value="0.95"/>
                            <Setter Property="Fill" TargetName="Arrow" Value="White"/>
                            <Setter Property="Foreground" TargetName="ContentSite" Value="White"/>
                            <Setter Property="Background" TargetName="Body" Value="{StaticResource Body.Background.MouseOver}"/>
                            <Setter Property="BorderBrush" TargetName="Body" Value="{StaticResource Body.BorderBrush.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="SnapsToDevicePixels" Value="true" />
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Grid Margin="0,1,0,1">
                                    <Border x:Name="ItemBackground" Background="#80000000"
                                            BorderBrush="#80000000"
                                            BorderThickness="1" 
                                            CornerRadius="2.5"
                                            Padding="3,0,3,1">
                                        <!--<ContentPresenter Margin="2,0,2,0"/>-->
                                        <TextBlock x:Name="contentSite"
                                               HorizontalAlignment="Left" 
                                               VerticalAlignment="Center"
                                               Text="{TemplateBinding Content, Converter={StaticResource cComboBox_converter_content2string}}" 
                                               Foreground="{TemplateBinding Foreground}" 
                                               IsHitTestVisible="False"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#80FFFFFF" TargetName="ItemBackground"/>
                                        <Setter Property="BorderBrush" Value="White" TargetName="ItemBackground"/>
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Crimson" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
   
</ResourceDictionary>